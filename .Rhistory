install.packages('cohen.kappa')
install.packages('psych')
library(psych)
sf <- matrix(c(
9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=4,byrow=TRUE)
colnames(sf) <- paste("J",1:4,sep="")
rownames(sf) <- paste("S",1:6,sep="")
sf
ICC(sf,lmer=FALSE)
sf  #example from Shrout and Fleiss (1979)
result <- ICC(sf,lmer=FALSE)  #just use the aov procedure
View(result)
View(summary(result))
View(result)
View(sf)
result$summary
View(result$summary)
setwd("C://Users/james/PROJETOS/RExemplos/")
library(dplyr)
library(tidytext)
library(tidyr)
library(stringr)
library(e1071)
texto <- scan("texto1.txt", what="char", sep="\n", encoding = "UTF-8")
dados.full <- data_frame(text = texto)
dados.bigram <- dados.full %>% unnest_tokens(tregram, text, token = "ngrams", n = 3)
dados.bigram.summ <- dados.bigram %>% separate(tregram, c("word1","word2","word3"), sep = " ")
modelo <- naiveBayes(as.factor(word3) ~ ., data = dados.bigram.summ)
infe <- data.frame(word1 = "Peito", word2 = "a")
library(dplyr)
library(tidytext)
library(tidyr)
library(stringr)
library(e1071)
texto <- scan("texto1.txt", what="char", sep="\n", encoding = "UTF-8")
dados.full <- data_frame(text = texto)
dados.bigram <- dados.full %>% unnest_tokens(tregram, text, token = "ngrams", n = 3)
dados.bigram.summ <- dados.bigram %>% separate(tregram, c("word1","word2","word3"), sep = " ")
modelo <- naiveBayes(as.factor(word3) ~ ., data = dados.bigram.summ)
infe <- data.frame(word1 = "Peito", word2 = "a")
res <- predict(modelo, infe, type = "class")
print(as.character(res))
texto <- scan("texto1.txt", what="char", sep="\n", encoding = "UTF-8")
dados.full <- data_frame(text = texto)
dados.bigram <- dados.full %>% unnest_tokens(tregram, text, token = "ngrams", n = 3)
dados.bigram.summ <- dados.bigram %>% separate(tregram, c("word1","word2","word3"), sep = " ")
setwd("C://Users/james/PROJETOS/RExemplos/")
library(dplyr)
library(tidytext)
library(tidyr)
library(stringr)
library(e1071)
texto <- scan("texto1.txt", what="char", sep="\n", encoding = "UTF-8")
dados.full <- data_frame(text = texto)
dados.bigram <- dados.full %>% unnest_tokens(tregram, text, token = "ngrams", n = 3)
texto <- scan("PrevisorPalavras.txt", what="char", sep="\n", encoding = "UTF-8")
dados.full <- data_frame(text = texto)
dados.bigram <- dados.full %>% unnest_tokens(tregram, text, token = "ngrams", n = 3)
dados.bigram.summ <- dados.bigram %>% separate(tregram, c("word1","word2","word3"), sep = " ")
modelo <- naiveBayes(as.factor(word3) ~ ., data = dados.bigram.summ)
save.image("C:/Users/james/PROJETOS/RExemplos/modeloBayes.RData")
load(file = "modeloBayes.RData")
infe <- data.frame(word1 = "Peito", word2 = "a")
res <- predict(modelo, infe, type = "class")
print(as.character(res))
